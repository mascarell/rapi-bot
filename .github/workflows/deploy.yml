name: Build, Push and Deploy Docker Image

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4.1.1

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/rapi-bot:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_DROPLET_IP }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Pulling the latest Docker image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/rapi-bot:latest
            
            echo "Checking if the container is already running..."
            if [ "$(docker ps -q -f name=rapibot)" ]; then
                echo "Container is running. Stopping and removing..."
                docker stop rapibot
                docker rm rapibot
            fi
            
            echo "Removing all unused images..."
            docker image prune -a -f
            
            echo "Creating environment file..."
            cat << EOF > .env
            WAIFUPORT=${{ secrets.WAIFU_PORT }}
            WAIFUTOKEN=${{ secrets.DISCORD_TOKEN }}
            CATAPI=${{ secrets.CAT_API }}
            CLIENTID=${{ secrets.CLIENT_ID }}
            S3BUCKET=${{ secrets.S3_BUCKET }}
            S3ACCESSKEYID=${{ secrets.S3_ACCESS_KEY_ID }}
            S3SECRETKEY=${{ secrets.S3_SECRET_KEY }}
            EOF
            
            echo "Running the new container..."
            docker run -d --restart unless-stopped --name rapibot --env-file .env ${{ secrets.DOCKER_USERNAME }}/rapi-bot:latest
